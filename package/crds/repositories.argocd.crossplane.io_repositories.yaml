
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: repositories.repositories.argocd.crossplane.io
spec:
  group: repositories.argocd.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - argocd
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Repository is a managed resource that represents an ArgoCD Git Repository
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RepositorySpec defines the desired state of an ArgoCD Repository.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RepositoryParameters define the desired state of an ArgoCD Git Repository
                properties:
                  enableLfs:
                    description: Whether git-lfs support should be enabled for this repo
                    type: boolean
                  enableOCI:
                    description: Whether helm-oci support should be enabled for this repo
                    type: boolean
                  githubAppEnterpriseBaseUrl:
                    description: Github App Enterprise base url if empty will default to https://api.github.com
                    type: string
                  githubAppID:
                    description: Github App ID of the app used to access the repo
                    format: int64
                    type: integer
                  githubAppInstallationID:
                    description: Github App Installation ID of the installed GitHub App
                    format: int64
                    type: integer
                  githubAppPrivateKeyRef:
                    description: Github App Private Key PEM data
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  inheritedCreds:
                    description: Whether credentials were inherited from a credential set
                    type: boolean
                  insecure:
                    description: Whether the repo is insecure
                    type: boolean
                  name:
                    description: only for Helm repos
                    type: string
                  passwordRef:
                    description: Password for authenticating at the repo server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repo:
                    description: URL of the repo
                    type: string
                  sshPrivateKeyRef:
                    description: SSH private key data for authenticating at the repo server only for Git repos SSHPrivateKey *string `json:"sshPrivateKey,omitempty"`
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  tlsClientCertDataRef:
                    description: TLS client cert data for authenticating at the repo server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  tlsClientCertKeyRef:
                    description: TLS client cert key for authenticating at the repo server
                    properties:
                      key:
                        description: Key whose value will be used.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  type:
                    description: type of the repo, maybe "git or "helm, "git" is assumed if empty or absent
                    type: string
                  username:
                    description: Username for authenticating at the repo server
                    type: string
                required:
                - repo
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RepositoryStatus represents the observed state of an ArgoCD Repository.
            properties:
              atProvider:
                description: RepositoryObservation represents an argocd repository.
                properties:
                  connectionState:
                    description: Current state of repository server connecting
                    properties:
                      attemptedAt:
                        format: date-time
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
